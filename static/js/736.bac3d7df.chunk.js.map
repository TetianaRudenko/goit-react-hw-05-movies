{"version":3,"file":"static/js/736.bac3d7df.chunk.js","mappings":"iQAEMA,E,OAAaC,GAAAA,GAAH,mO,kBCmDhB,EA/Ca,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,GAAW,UAAD,OAAWH,EAAX,aAFjC,OAEUI,EAFV,OAGIL,EAAUK,EAAKC,MAHnB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUbC,EACF,GAAE,CAACR,KAGF,2BACGF,EAAOW,OAAS,IACf,SAACd,EAAD,UAEGG,EAAOY,KAAI,SAAAC,GAAK,OACf,0BACGA,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,KACXC,MAAM,KACNC,OAAO,QAGT,SAAC,MAAD,CAASC,KAAK,QAEhB,yBAAG,IAAEP,EAAMI,KAAK,QAChB,yBAAG,eAAcJ,EAAMQ,eAZhBR,EAAMS,GADA,MAkBF,IAAlBtB,EAAOW,SACN,uBAAG,gDAIV,C,8FCjDKY,EAAW,+BACXC,EAAU,mCAAhB,SAEenB,EAAW,EAAXA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BoB,EAAUC,GAApC,uFACyBC,EAAAA,EAAAA,IAAA,UAClBJ,GADkB,OACPE,EADO,oBACaD,EADb,YACwBE,IAFjD,cACQE,EADR,yBAISA,EAAStB,MAJlB,kE","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/apiService.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst ActorsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  grid-column-gap: 8px;\n  grid-row-gap: 8px;\n\n  margin: 0 auto;\n  padding: 0;\n  list-style: none;\n`\n\nexport { ActorsList };\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiService } from \"services/apiService\";\nimport { ActorsList } from \"./Cast.styled\";\nimport { FiSmile } from \"react-icons/fi\";\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        const data = await apiService(`/movie/${movieId}/credits`);\n        setActors(data.cast);\n      } catch (error) {\n        console.log(error);\n      }    \n    }\n\n     fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {actors.length > 0 && (\n        <ActorsList>\n          \n          {actors.map(actor => (            \n            <li key={actor.id}>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w92/${actor.profile_path}`}\n                  alt={actor.name}\n                  width='92'\n                  height='92'\n                /> \n              ) : (\n                <FiSmile size='92' />\n              )}\n              <p> {actor.name} </p>\n              <p> Character: { actor.character}</p>\n            </li>\n          ))}\n        </ActorsList>\n      )}\n      {actors.length === 0 && (\n        <p>Sorry! There is no information about cast</p>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY_API = '4783198657ea1b88591b21ed0e8ddd4b';\n\nasync function apiService(pathname, search) {\n  const response = await axios.get(\n    `${BASE_URL}${pathname}?api_key=${KEY_API}&${search}`\n  );\n  return response.data;\n}\n\nexport { apiService };\n\n"],"names":["ActorsList","styled","useState","actors","setActors","movieId","useParams","useEffect","apiService","data","cast","console","log","fetchCast","length","map","actor","profile_path","src","alt","name","width","height","size","character","id","BASE_URL","KEY_API","pathname","search","axios","response"],"sourceRoot":""}