{"version":3,"file":"static/js/691.e86dab24.chunk.js","mappings":"+QAGMA,EAAeC,EAAAA,GAAAA,OAAH,qhBAqBZC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAkBF,EAAAA,GAAAA,MAAH,+NAefG,EAAmBH,EAAAA,GAAAA,OAAH,uX,SCgCtB,EA3Ee,WAAO,IAAD,IACnB,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAaC,EAAAA,EAAAA,QAAOH,GAC1B,GAA0BN,EAAAA,EAAAA,UAAQ,UAACQ,EAAWE,eAAZ,QAAuB,IAAzD,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAEuBC,EAAAA,EAAAA,GAAW,gBAAD,iBAA4BR,IAF7D,OAEUS,EAFV,OAIIb,EAAUa,EAAKC,SAJnB,gDAMIC,QAAQC,IAAR,MANJ,0DALc,sBACA,KAAVZ,GADU,mCAeda,EACD,GAAE,CAACb,IAiBJ,OACE,4BACE,SAACX,EAAD,WACE,UAACE,EAAD,CAAYuB,SAjBG,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACf,GAAkC,KAA9BD,EAAKE,SAASnB,MAAMoB,MAEtB,OAAOrB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOiB,EAAKE,SAASnB,MAAMoB,OAC9C,EASK,WACE,SAAC5B,EAAD,CACE6B,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTJ,MAAOf,EACPoB,SAdW,SAAAV,GACnBT,EAASS,EAAEG,OAAOE,MACnB,KAaO,SAAC3B,EAAD,CAAkB4B,KAAK,SAAvB,SAAgC,gBAKzB,KAAVrB,GAAgBL,EAAO+B,OAAS,IAC/B,wBACG/B,EAAOgC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAnB,SACGF,EAAMG,SAFFH,EAAME,GADA,MASV,KAAV9B,GAAkC,IAAlBL,EAAO+B,SACtB,yBAAG,oCAAkC1B,EAAM,4BAKlD,C,8FC7EKgC,EAAW,+BACXC,EAAU,mCAAhB,SAEezB,EAAW,EAAXA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0B0B,EAAUC,GAApC,uFACyBC,EAAAA,EAAAA,IAAA,UAClBJ,GADkB,OACPE,EADO,oBACaD,EADb,YACwBE,IAFjD,cACQE,EADR,yBAISA,EAAS5B,MAJlB,kE","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/apiService.js"],"sourcesContent":["import styled from \"styled-components\";\n//import { BiSearchAlt } from \"react-icons/bi\"; \n\nconst SearchHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  //min-height: 64px;\n  //padding-right: 24px;\n  //padding-left: 24px;\n  //padding-top: 12px;\n  //padding-bottom: 12px;\n  padding:12px;\n  color: #fff;\n  background-color: rgba(0, 0, 0, 0.2);\n  background-color: rgba(219, 216, 0, 0.88);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n` \n\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`\n\nconst SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding:6px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`\n\nconst SearchFormButton = styled.button`\n  display: inline-block;\n  width: 60px;\n  //height: 48px;\n  border: 0;\n  background-color: transparent;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n\n`\n\n/* const SearchIcon = styled(BiSearchAlt)`\n  width:20px;\n  height:20px;\n` */\n\nexport { SearchHeader, SearchForm, SearchFormInput, SearchFormButton}","import {  useEffect, useRef, useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { apiService } from \"../../services/apiService\";\nimport { SearchHeader, SearchForm, SearchFormInput, SearchFormButton  } from \"../../pages/Movies/Movies.styled\";\n\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const inputValue = useRef(query);\n  const [input, setInput] = useState(inputValue.current ?? '');\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function fetchMovies() {\n      try {\n        const data = await apiService('/search/movie', `&query=${query}`);\n        //console.log(data.results)\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchMovies();\n  }, [query])\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    if (form.elements.query.value === '') {\n      //console.log(form);\n      return setSearchParams({});\n    }\n    setSearchParams({ query: form.elements.query.value });  \n  }\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  }\n\n  return (\n    <div>\n      <SearchHeader> \n        <SearchForm onSubmit={ handleSubmit }>\n          <SearchFormInput\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            autoFocus\n            value={input}\n            onChange={ handleChange } />\n          <SearchFormButton type=\"submit\">\n            Search\n          </SearchFormButton>\n        </SearchForm>\n      </SearchHeader>\n      {query !== '' && movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {query !== '' && movies.length === 0 && (\n        <p>Sorry, there are no images with ${query}. Please try again. </p>\n      )}\n    </div>\n  )\n  \n}\n\nexport default Movies;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY_API = '4783198657ea1b88591b21ed0e8ddd4b';\n\nasync function apiService(pathname, search) {\n  const response = await axios.get(\n    `${BASE_URL}${pathname}?api_key=${KEY_API}&${search}`\n  );\n  return response.data;\n}\n\nexport { apiService };\n\n"],"names":["SearchHeader","styled","SearchForm","SearchFormInput","SearchFormButton","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","inputValue","useRef","current","input","setInput","useEffect","apiService","data","results","console","log","fetchMovies","onSubmit","e","preventDefault","form","target","elements","value","type","name","autoComplete","autoFocus","onChange","length","map","movie","to","id","title","BASE_URL","KEY_API","pathname","search","axios","response"],"sourceRoot":""}